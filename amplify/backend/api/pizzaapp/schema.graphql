input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }

type PizzaApp
  @model(queries: null, mutations: null, subscriptions: null, timestamps: null)  {
  
  PK: String! @primaryKey(sortKeyFields: ["SK"])
  SK: String!
  GSI_SECONDARY_PK: String! @index(name: "GSI_SECONDARY_PK", sortKeyFields: ["GSI_SECONDARY_SK"])
  GSI_SECONDARY_SK: String!
  CREATED_AT: String!
  UPDATED_AT: String!
  MODEL: String!
  TTL: AWSTimestamp
}

type Order {
  id: String!
  user_id: String!
  date: String!
  customPizzas: [CustomPizza]!
  specialtyPizzas: [SpecialityPizza]!
  user_name: String!
  subtotal: Int!
  tax: Int!
  total: Int!
}

type CustomPizza {
  id: String!
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheese!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Int!
}

type SpecialityPizza {
  id: String!
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheese!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Int!
}

type PizzaCheese {
  quantity: CheeseQuantity!
  additional: AdditionCheeseType
}

enum PizzaVeggie {
  MUSHROOMS
  ONIONS
  GREEN_PEPPERS
  BLACK_OLIVES
  TOMATOES
  PINEAPPLE
  JALAPENOS
  NONE
}

enum PizzaMeat {
  PEPPERONI
  SAUSAGE
  BEEF
  HAM
  BACON
  CHICKEN
  NONE
}

enum AdditionCheeseType {
  THREE_CHEESE
  EXTRA_CHEESE
  PARMESAN
  FETA
  CHEDDAR
  NONE
}

enum CheeseQuantity {
  NORMAL
  LIGHT
  NONE
}

enum PizzaSize {
  SMALL
  MEDIUM
  LARGE
}

enum PizzaCrust {
  ORIGINAL
  DEEP_DISH
  THIN
  STUFFED
  NEW_YORK
}

enum PizzaSauce {
  TOMATO
  ALFREDO
  PESTO
  BBQ
  GARLIC
  NONE
}

input ListOrdersByUserInput {
  user_id: String!
}

input GetOrderInput {
  id: String!
  user_id: String!
  date: String!
}

input CreateOrderInput {
  user_id: String!
  date: String!
  user_name: String!
  subtotal: Int!
  tax: Int!
  total: Int!
  customPizzas: [CustomPizzaInput]
  specialtyPizzas: [SpecialityPizzaInput]
}

input UpdateOrderInput {
  id: String!
  user_id: String!
  date: String!
  user_name: String
  subtotal: Int
  tax: Int
  total: Int
  customPizzas: [CustomPizzaInput]
  specialtyPizzas: [SpecialityPizzaInput]
}

input CustomPizzaInput {
  id: String!
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheeseInput!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Int!
}

input SpecialityPizzaInput {
  id: String!
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheeseInput!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Int!
}

input PizzaCheeseInput {
  quantity: CheeseQuantity!
  additional: AdditionCheeseType
}

input DeleteOrderInput {
  id: String!
  user_id: String!
  date: String!
}

type Query {
  listOrdersByUser(input: ListOrdersByUserInput): [Order]
  getOrder(input: GetOrderInput!): Order
}

type Mutation {
  createOrder(input: CreateOrderInput!): Order
  updateOrder(input: UpdateOrderInput!): Order
  deleteOrder(input: DeleteOrderInput!): Order
}