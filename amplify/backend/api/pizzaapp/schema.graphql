input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
}

type PizzaApp
  @model(
    queries: null
    mutations: null
    subscriptions: null
    timestamps: null
  ) {
  PK: String! @primaryKey(sortKeyFields: ["SK"])
  SK: String!
  GSI_SECONDARY_PK: String!
    @index(name: "GSI_SECONDARY_PK", sortKeyFields: ["GSI_SECONDARY_SK"])
  GSI_SECONDARY_SK: String!
  CREATED_AT: String!
  UPDATED_AT: String!
  MODEL: String!
  TTL: AWSTimestamp
}

type Order {
  id: String!
  user_id: String!
  date: String!
  customPizzas: [CustomPizza]!
  specialtyPizzas: [SpecialtyPizza]!
  user_name: String!
  subtotal: Float!
  tax: Float!
  total: Float!
}

type CustomPizza {
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheese!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Float!
  quantity: Int!
}

type SpecialtyPizza {
  description: String!
  id: String!
  imageUrl: String!
  name: String
  price: Float!
  toppings: [String]!
}

type PizzaCheese {
  quantity: CheeseQuantity!
  additional: AdditionCheeseType
}

enum PizzaVeggie {
  MUSHROOMS
  ONIONS
  GREEN_PEPPERS
  BLACK_OLIVES
  TOMATOES
  PINEAPPLE
  JALAPENOS
  NONE
}

enum PizzaMeat {
  PEPPERONI
  SAUSAGE
  BEEF
  HAM
  BACON
  CHICKEN
  NONE
}

enum AdditionCheeseType {
  THREE_CHEESE
  EXTRA_CHEESE
  PARMESAN
  FETA
  CHEDDAR
  NONE
}

enum CheeseQuantity {
  NORMAL
  LIGHT
  NONE
}

enum PizzaSize {
  SMALL
  MEDIUM
  LARGE
}

enum PizzaCrust {
  ORIGINAL
  DEEP_DISH
  THIN
  STUFFED
  NEW_YORK
}

enum PizzaSauce {
  TOMATO
  ALFREDO
  PESTO
  BBQ
  GARLIC
  NONE
}

input ListOrdersByUserInput {
  user_id: String!
}

input GetOrderInput {
  id: String!
  user_id: String!
  date: String!
}

input CreateOrderInput {
  user_id: String!
  date: String!
  user_name: String!
  subtotal: Float!
  tax: Float!
  total: Float!
  customPizzas: [CustomPizzaInput]
  specialtyPizzas: [SpecialtyPizzaInput]
}

input UpdateOrderInput {
  id: String!
  user_id: String!
  date: String!
  user_name: String
  subtotal: Float
  tax: Float
  total: Float
  customPizzas: [CustomPizzaInput]
  specialtyPizzas: [SpecialtyPizzaInput]
}

input CustomPizzaInput {
  size: PizzaSize!
  crust: PizzaCrust!
  sauce: PizzaSauce!
  cheese: PizzaCheeseInput!
  meats: [PizzaMeat]!
  veggies: [PizzaVeggie]!
  price: Float!
  quantity: Int!
}

input SpecialtyPizzaInput {
  description: String!
  id: String!
  imageUrl: String!
  name: String
  price: Float!
  toppings: [String]!
}

input PizzaCheeseInput {
  quantity: CheeseQuantity!
  additional: AdditionCheeseType
}

input DeleteOrderInput {
  id: String!
  user_id: String!
  date: String!
}

type Query {
  listOrdersByUser(input: ListOrdersByUserInput): [Order]
  getOrder(input: GetOrderInput!): Order
}

type Mutation {
  createOrder(input: CreateOrderInput!): Order
  updateOrder(input: UpdateOrderInput!): Order
  deleteOrder(input: DeleteOrderInput!): Order
}
